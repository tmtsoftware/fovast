<?xml version="1.0" encoding="UTF-8"?>

<!--
    Document   : InstrumentControl.xml
    Description:
        Includes info on what all config options are present, their possible values
        and display elements associated with each config

        This XML has all the information to enable and disable different
        instrument config options. It also has info on what config option
        depends on what other config option.
        
        Display elements are the figures shown on the image.
        Config elements are the settings to be done on the telescope
        DisplayElements are purely for visualization purpose. They can be saved
            in FOVAST for restoring the app to exactly same state where it was
            left.
        For DisplayElements showByDefault="true" is the default setting
        For ConfigElements selectByDefault if true indicates that the option has
            to be auto-set as and when the parent element is set. By default this
            is false
        For a config option type is determinded by the type attribute. Possible 
            values can be indicated using the PossibleValues child element.
       
        Nesting of ConfigOptions indicates a parent child relation.
        Value of a config option only makes sense if its enabled (all enable 
        conditions are true) and if its parent is set to some value.

        NOTE: For saving a visualization, we can use the same XML tags with an
        additional value attribute indicating the value set ..

        NOTE: We dont interpret selectMode attribute as of now. The only mode
        supported is mutuallyExclusive .. meaning config can take any one value
        of the possible values. 

        NOTE on types: type attribute can take bool, string, int, float, position as values
        position is a generic type which has two values. does not really specify
        if its wcs or image position etc
        int is internally a java long
        float is internally a java double precision float

        *** Tackling display elements ***       
        (Not fully implemented)
            0. DependencyElements can only rotate and move (in a constrained way)
                - this can be handled by having rotatable & moveable attributes
                to display elements .. 
            1. We already have EnableConditions which takes care of when to enable
                a display element.
            2. Some ConfigOption value can depend on a particular display element's
                position .. (like iris.oiwfs.probe1.position)
                    - VisualizationWorkPanel has to listen to figure rotation/movement ..
                    and accordingly call Config.setConfig ..
                    - This needs work panel to be aware of ConfigOption dependencies
                    on display elements ..
                    - How can this happen ? VWP has to be aware of captured elements
                        .. config  should so have a method getCapturedConfig()
                        which returns a HashMap of <DisplayElement, ConfigOption>..
                        whenever a figure rotates its display element is looked up
                        and then corresponding configOption is looked up and setConfig
                        is called on it ..
                        .. or DisplayElement has reference of the config
                        it drives and figure has reference of displayelement it
                        is associated to 
            3. When one display element is moved/rotated .. then others also 
                would move/rotate. When iris science detector is rotated - then
                probes also rotate .. (actually whats rotated is the nfiraos platform
                and everything mounted on it has to rotate .. )
                    - we can have display element groups .. every display element
                    has a group property. if not it inherits from its parent ..
                    - there can be several display elements which can act
                    as group master ..
                    - groupmaster = "group1, group2, .."  group="group1, ..."
                    (we can instead have multiple group child elements)
             4. Also order in which the display elements should be displayed
             should also be in the XML file. (probes should be over detector etc)
             5. For lenslet and slicer field size depends on chosen patescale & spaxels
                - Ultimately each display element has a <ShapeInfo> child
                which has several <Property name="" value=""/> children. Properrties
                can be center_x_offset, type (rectangle, circle .. etc). Property
                values can be numbers in arc-sec (or) value of a property can
                be dependent on some config value like ${iris.xx.xx}.value or
                can have child elements which specifiy the value to be used in
                different scenarios
                <Property name="fieldWidth">
                    <Value value="4.4">
                     <Condition type="and">
                        <Condition element="iris.ifu.slicer.spaxesls" value=""90x45/>
                        <Condition element="iris.ifu.slicer.platescale" value="50mas"/>
                     </Condition>
                    </Value>
                </Property>

TODO: TOCHECK: is it only the imager that rotates or even the lenslet / slicer that can rotate ?

                
-->

<FovastInstrumentConfig>

    <ConfigOption id="instrument" type="string">
        <PossibleValues>
            <Value>iris</Value>
            <Value>mobie</Value>
        </PossibleValues>
    </ConfigOption>
    
    <ConfigOption id="iris" selectOnEnable="true"> <!-- selectByDefault="true"  -->

        <EnableConditions>
            <!--Condition element="mobie" value="false" /-->
            <Condition element="instrument" value="iris"/>
        </EnableConditions>

        <!-- We could have allowed for multiple selection in ifu.observingmode
        but as we dont have support for multiple values for a config -->
        
        <ConfigOption id="iris.imager" selectByDefault="true">
            <DisplayElement id="iris.sciencedetector" showByDefault="true">
            </DisplayElement>
        </ConfigOption>

        <ConfigOption id="iris.ifu">
            <ConfigOption id="iris.ifuimager" type="string">
                <PossibleValues>
                    <Value>Lenslet</Value>
                    <Value>Slicer</Value>
                </PossibleValues>

                <DisplayElement id="iris.ifuimager.lenslet" showByDefault="true">
                    <EnableConditions>
                        <Condition element="iris.ifuimager" value="Lenslet" />
                    </EnableConditions>
                </DisplayElement>

                <DisplayElement id="iris.ifuimager.slicer" showByDefault="true">
                    <EnableConditions>
                        <Condition element="iris.ifuimager" value="Slicer" />
                    </EnableConditions>
                </DisplayElement>
            </ConfigOption>
            <DisplayElement id="iris.ifuimager.drag"  showByDefault="false">
           </DisplayElement>
        </ConfigOption>

        <!-- For each probe we have to store the probe tip RA, DEC
            Can select stars beneath it.
        -->
        <ConfigOption id="iris.oiwfs.probe1" selectByDefault="true">

           <ConfigOption id="iris.oiwfs.probe1.position"
                type="position" captured="true" captureElement="iris.oiwfs.probe1.arm"/>

           <DisplayElement id="iris.oiwfs.probe1.arm"  showByDefault="true">
           </DisplayElement>

           <DisplayElement id="iris.oiwfs.probe1.limits"  showByDefault="true">
           </DisplayElement>

           <DisplayElement id="iris.oiwfs.probe1.vignettingLimits"  showByDefault="true">
           </DisplayElement>

           <DisplayElement id="iris.oiwfs.probe1.focus"  showByDefault="false">
           </DisplayElement>

        </ConfigOption>

        <ConfigOption id="iris.oiwfs.probe2"  selectByDefault="true">
           <ConfigOption id="iris.oiwfs.probe2.position"
                type="position" captured="true" captureElement="iris.oiwfs.probe2.arm"/>

           <DisplayElement id="iris.oiwfs.probe2.arm" showByDefault="true">
           </DisplayElement>

           <DisplayElement id="iris.oiwfs.probe2.limits" showByDefault="true">
           </DisplayElement>

           <DisplayElement id="iris.oiwfs.probe2.vignettingLimits" showByDefault="true">
           </DisplayElement>

           <DisplayElement id="iris.oiwfs.probe2.focus"  showByDefault="false">
           </DisplayElement>

        </ConfigOption>

        <ConfigOption id="iris.oiwfs.probe3" selectByDefault="true">
           <ConfigOption id="iris.oiwfs.probe3.position"
                type="position" captured="true" captureElement="iris.oiwfs.probe3.arm"/>

           <DisplayElement id="iris.oiwfs.probe3.arm" showByDefault="true">
           </DisplayElement>

           <DisplayElement id="iris.oiwfs.probe3.limits" showByDefault="true">
           </DisplayElement>

           <DisplayElement id="iris.oiwfs.probe3.vignettingLimits" showByDefault="true">
           </DisplayElement>

           <DisplayElement id="iris.oiwfs.probe3.focus"  showByDefault="false">
           </DisplayElement>

        </ConfigOption>
        
    </ConfigOption>
    
    <ConfigOption id="nfiraos" selectOnEnable="true">
        <EnableConditions>
            <!-- NFIRAOS elements should be selected and shown only when an
            instrument which is to be mount on it is selected. IRIS is one such
            instrument -->
            <!--Condition type="or">
                <Condition element="iris" value="true"></Condition>                
                ~~~ condition tags for other NFIRAOS mounted instruments to come ~~~
            </Condition-->
            <Condition element="iris" value="true"/>            
        </EnableConditions>

        <DisplayElement id="nfiraos.limits">
            
        </DisplayElement>

        <!-- This is a six star asterism .. polygon of stars with one at center
            Arc made by stars on polygon subtens 72 deg angle at center. One of the
            stars on the polygon is to north for now. The points on the polygon are
            35 arc-sec away from center (radius of pentagon)-->
        <DisplayElement id="nfiraos.lsgasterism">

        </DisplayElement>

        <!-- This cannot interfere with science detector and can be moved with in
            1 arc min FOV of NFIRAOS
            Can select stars beneath it 
        -->
        <ConfigOption id="nfiraos.twfs">

            <DisplayElement id="nfiraos.twfs.detector" showByDefault="true">
            </DisplayElement>

        </ConfigOption>

        <DisplayElement id="nfiraos.acqusitionCamera">

        </DisplayElement>

        <!-- 20 arc sec centered on optical axis -->
        <DisplayElement id="nfiraos.acqusitionCameraLimits">

        </DisplayElement>

        <!-- TBD as per US-44 -->
        <DisplayElement id="nfiraos.acqusitionCameraPointing">

        </DisplayElement>

    </ConfigOption>

    <ConfigOption id="mobie" selectOnEnable="true">

        <EnableConditions>
            <!--Condition element="iris" value="false" /-->
            <Condition element="instrument" value="mobie"/>
        </EnableConditions>

        <DisplayElement showByDefault="true" id="mobie.detector">
        </DisplayElement>

        <DisplayElement showByDefault="true" id="mobie.vignettingstart">
        </DisplayElement>
        
        <DisplayElement showByDefault="true" id="mobie.edgeoffield">
        </DisplayElement>

        <DisplayElement showByDefault="false" id="mobie.drag">
        </DisplayElement>

    </ConfigOption>
    
</FovastInstrumentConfig>
